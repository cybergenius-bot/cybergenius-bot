"""
–ö–∏–±–µ—Ä–ì–µ–Ω–∏–π - Telegram Q&A Bot
–†—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–π –±–æ—Ç –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
"""

import logging
import asyncio
import time
from aiohttp import web
from bot import start_bot, bot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def health_check(request):
    """Endpoint –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    return web.json_response({
        "status": "healthy",
        "service": "KyberGenius Telegram Bot",
        "timestamp": time.time()
    })

async def bot_info(request):
    """Endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ"""
    try:
        bot_info = await bot.get_me()
        return web.json_response({
            "bot_username": bot_info.username,
            "bot_id": bot_info.id,
            "bot_name": bot_info.first_name,
            "status": "running"
        })
    except Exception as e:
        logger.error(f"Error getting bot info: {e}")
        return web.json_response({
            "error": "Unable to get bot info",
            "status": "error"
        }, status=500)

async def init_app():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    app = web.Application()
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ—É—Ç—ã
    app.router.add_get('/health', health_check)
    app.router.add_get('/bot-info', bot_info)
    app.router.add_get('/', lambda request: web.json_response({
        "message": "KyberGenius Telegram Bot is running",
        "endpoints": {
            "/health": "Health check",
            "/bot-info": "Bot information"
        }
    }))
    
    return app

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        logger.info("="*50)
        logger.info("ü§ñ Starting KyberGenius Telegram Bot Server")
        logger.info("="*50)
        
        # –°–æ–∑–¥–∞–µ–º –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        app = await init_app()
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è –±–æ—Ç–∞ –∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
        bot_task = asyncio.create_task(start_bot())
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
        runner = web.AppRunner(app)
        await runner.setup()
        site = web.TCPSite(runner, '0.0.0.0', 5000)  # Changed to port 5000
        await site.start()
        
        logger.info("üåê Web server started on 0.0.0.0:5000")
        logger.info("ü§ñ Bot is starting...")
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–¥–∞—á
        await bot_task
        
    except KeyboardInterrupt:
        logger.info("üõë Received interrupt signal")
    except Exception as e:
        logger.error(f"‚ùå Critical error: {e}")
        raise
    finally:
        logger.info("üëã KyberGenius Bot Server stopped")

if __name__ == '__main__':
    asyncio.run(main())
